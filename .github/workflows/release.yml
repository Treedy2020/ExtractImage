name: Windows Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build (${{ matrix.arch }})
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, x86]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: ${{ matrix.arch }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pymupdf

      - name: Build executable
        run: |
          pyinstaller main.py --name ExtractPDF --onefile

      - name: Package artifact
        run: |
          $version = "${{ github.ref_name }}"
          if ($version.StartsWith("v")) { $version = $version.Substring(1) }
          $zipName = "ExtractPDF-${version}-${{ matrix.arch }}.zip"
          Compress-Archive -Path "dist/ExtractPDF.exe" -DestinationPath $zipName -Force
          echo "zip_name=$zipName" >> $env:GITHUB_OUTPUT
        id: package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.zip_name }}
          path: ${{ steps.package.outputs.zip_name }}
          if-no-files-found: error

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.zip
          name: Release ${{ github.ref_name }}
